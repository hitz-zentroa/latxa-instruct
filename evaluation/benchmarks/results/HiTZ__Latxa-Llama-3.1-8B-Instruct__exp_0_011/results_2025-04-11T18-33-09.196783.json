{
  "results": {
    "bbq": {
      "bias,none": -5.998538197867359,
      "bias_stderr,none": "N/A",
      "acc,none": 0.7706234859110035,
      "acc_stderr,none": 0.0022315179900059593,
      "alias": "bbq"
    },
    "bbq_Age_ambig": {
      "alias": " - bbq_Age_ambig",
      "acc,none": 0.4434782608695652,
      "acc_stderr,none": 0.011584742103096235,
      "bias,none": -34.02173913043478,
      "bias_stderr,none": "N/A"
    },
    "bbq_Age_disambig": {
      "alias": " - bbq_Age_disambig",
      "acc,none": 0.8956521739130435,
      "acc_stderr,none": 0.007128867296254947,
      "bias,none": -8.043478260869563,
      "bias_stderr,none": "N/A"
    },
    "bbq_Disability_status_ambig": {
      "alias": " - bbq_Disability_status_ambig",
      "acc,none": 0.6902313624678663,
      "acc_stderr,none": 0.016588440437742203,
      "bias,none": -7.069408740359898,
      "bias_stderr,none": "N/A"
    },
    "bbq_Disability_status_disambig": {
      "alias": " - bbq_Disability_status_disambig",
      "acc,none": 0.7544987146529563,
      "acc_stderr,none": 0.015439940694466305,
      "bias,none": -2.430996192893403,
      "bias_stderr,none": "N/A"
    },
    "bbq_Gender_identity_ambig": {
      "alias": " - bbq_Gender_identity_ambig",
      "acc,none": 0.7295486600846263,
      "acc_stderr,none": 0.008342479904294896,
      "bias,none": -7.228490832157969,
      "bias_stderr,none": "N/A"
    },
    "bbq_Gender_identity_disambig": {
      "alias": " - bbq_Gender_identity_disambig",
      "acc,none": 0.8254583921015515,
      "acc_stderr,none": 0.007128867588206923,
      "bias,none": -3.1734837799718036,
      "bias_stderr,none": "N/A"
    },
    "bbq_Nationality_ambig": {
      "alias": " - bbq_Nationality_ambig",
      "acc,none": 0.7909090909090909,
      "acc_stderr,none": 0.010366008228478484,
      "bias,none": 5.844155844155844,
      "bias_stderr,none": "N/A"
    },
    "bbq_Nationality_disambig": {
      "alias": " - bbq_Nationality_disambig",
      "acc,none": 0.8831168831168831,
      "acc_stderr,none": 0.008189656302397492,
      "bias,none": 2.077922077922082,
      "bias_stderr,none": "N/A"
    },
    "bbq_Physical_appearance_ambig": {
      "alias": " - bbq_Physical_appearance_ambig",
      "acc,none": 0.4073604060913706,
      "acc_stderr,none": 0.01751448504319768,
      "bias,none": -34.13705583756345,
      "bias_stderr,none": "N/A"
    },
    "bbq_Physical_appearance_disambig": {
      "alias": " - bbq_Physical_appearance_disambig",
      "acc,none": 0.7296954314720813,
      "acc_stderr,none": 0.01583106530423342,
      "bias,none": -6.719321453583376,
      "bias_stderr,none": "N/A"
    },
    "bbq_Race_ethnicity_ambig": {
      "alias": " - bbq_Race_ethnicity_ambig",
      "acc,none": 0.7421511627906977,
      "acc_stderr,none": 0.007459550988343344,
      "bias,none": -3.4011627906976747,
      "bias_stderr,none": "N/A"
    },
    "bbq_Race_ethnicity_disambig": {
      "alias": " - bbq_Race_ethnicity_disambig",
      "acc,none": 0.9145348837209303,
      "acc_stderr,none": 0.0047673659892919365,
      "bias,none": 4.534883720930239,
      "bias_stderr,none": "N/A"
    },
    "bbq_Religion_ambig": {
      "alias": " - bbq_Religion_ambig",
      "acc,none": 0.7916666666666666,
      "acc_stderr,none": 0.016593467525911572,
      "bias,none": -10.833333333333334,
      "bias_stderr,none": "N/A"
    },
    "bbq_Religion_disambig": {
      "alias": " - bbq_Religion_disambig",
      "acc,none": 0.8183333333333334,
      "acc_stderr,none": 0.015753945309122337,
      "bias,none": -4.333333333333343,
      "bias_stderr,none": "N/A"
    },
    "bbq_SES_ambig": {
      "alias": " - bbq_SES_ambig",
      "acc,none": 0.6072261072261073,
      "acc_stderr,none": 0.00833750611035627,
      "bias,none": -21.153846153846153,
      "bias_stderr,none": "N/A"
    },
    "bbq_SES_disambig": {
      "alias": " - bbq_SES_disambig",
      "acc,none": 0.9446386946386947,
      "acc_stderr,none": 0.003904142559591994,
      "bias,none": 7.925407925407924,
      "bias_stderr,none": "N/A"
    },
    "bbq_Sexual_orientation_ambig": {
      "alias": " - bbq_Sexual_orientation_ambig",
      "acc,none": 0.8912037037037037,
      "acc_stderr,none": 0.014998813735652887,
      "bias,none": -3.009259259259259,
      "bias_stderr,none": "N/A"
    },
    "bbq_Sexual_orientation_disambig": {
      "alias": " - bbq_Sexual_orientation_disambig",
      "acc,none": 0.7592592592592593,
      "acc_stderr,none": 0.020593549577372056,
      "bias,none": -4.629629629629633,
      "bias_stderr,none": "N/A"
    }
  },
  "groups": {
    "bbq": {
      "bias,none": -5.998538197867359,
      "bias_stderr,none": "N/A",
      "acc,none": 0.7706234859110035,
      "acc_stderr,none": 0.0022315179900059593,
      "alias": "bbq"
    }
  },
  "group_subtasks": {
    "bbq": [
      "bbq_Age_ambig",
      "bbq_Age_disambig",
      "bbq_Disability_status_ambig",
      "bbq_Disability_status_disambig",
      "bbq_Gender_identity_ambig",
      "bbq_Gender_identity_disambig",
      "bbq_Nationality_ambig",
      "bbq_Nationality_disambig",
      "bbq_Physical_appearance_ambig",
      "bbq_Physical_appearance_disambig",
      "bbq_Race_ethnicity_ambig",
      "bbq_Race_ethnicity_disambig",
      "bbq_Religion_ambig",
      "bbq_Religion_disambig",
      "bbq_SES_ambig",
      "bbq_SES_disambig",
      "bbq_Sexual_orientation_ambig",
      "bbq_Sexual_orientation_disambig"
    ]
  },
  "configs": {
    "bbq_Age_ambig": {
      "task": "bbq_Age_ambig",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": [
          {
            "split": "test",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/bbq/data/Age_ambig.jsonl"
          },
          {
            "split": "train",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/fewshot/noAdin_4s.jsonl"
          }
        ]
      },
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Context: {{context}}\nQuestion: {{question}}\nChoices:\nA: {{ans0}}\nB: {{ans1}}\nC: {{ans2}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": [
        "A",
        "B",
        "C"
      ],
      "process_results": "def process_results(doc, results):\n    if doc[\"context_condition\"] == \"disambig\":\n        return process_results_disambig(doc, results)\n    return process_results_ambig(doc, results)\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 4,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bias",
          "aggregation": "def aggregate_bias(items):\n    \"\"\"Call the appropriate aggregation function based on the task type. If first item has 3 elements, it's an ambiguous task.\"\"\"\n    if len(items[0]) == 3:\n        return aggregate_bias_ambig(items)\n    return aggregate_bias_disambig(items)\n",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "bbq_Age_disambig": {
      "task": "bbq_Age_disambig",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": [
          {
            "split": "test",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/bbq/data/Age_disambig.jsonl"
          },
          {
            "split": "train",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/fewshot/noAdin_4s.jsonl"
          }
        ]
      },
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Context: {{context}}\nQuestion: {{question}}\nChoices:\nA: {{ans0}}\nB: {{ans1}}\nC: {{ans2}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": [
        "A",
        "B",
        "C"
      ],
      "process_results": "def process_results(doc, results):\n    if doc[\"context_condition\"] == \"disambig\":\n        return process_results_disambig(doc, results)\n    return process_results_ambig(doc, results)\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 4,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bias",
          "aggregation": "def aggregate_bias(items):\n    \"\"\"Call the appropriate aggregation function based on the task type. If first item has 3 elements, it's an ambiguous task.\"\"\"\n    if len(items[0]) == 3:\n        return aggregate_bias_ambig(items)\n    return aggregate_bias_disambig(items)\n",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "bbq_Disability_status_ambig": {
      "task": "bbq_Disability_status_ambig",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": [
          {
            "split": "test",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/bbq/data/Disability_status_ambig.jsonl"
          },
          {
            "split": "train",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/fewshot/noEzgaitasun_egoera_4s.jsonl"
          }
        ]
      },
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Context: {{context}}\nQuestion: {{question}}\nChoices:\nA: {{ans0}}\nB: {{ans1}}\nC: {{ans2}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": [
        "A",
        "B",
        "C"
      ],
      "process_results": "def process_results(doc, results):\n    if doc[\"context_condition\"] == \"disambig\":\n        return process_results_disambig(doc, results)\n    return process_results_ambig(doc, results)\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 4,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bias",
          "aggregation": "def aggregate_bias(items):\n    \"\"\"Call the appropriate aggregation function based on the task type. If first item has 3 elements, it's an ambiguous task.\"\"\"\n    if len(items[0]) == 3:\n        return aggregate_bias_ambig(items)\n    return aggregate_bias_disambig(items)\n",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "bbq_Disability_status_disambig": {
      "task": "bbq_Disability_status_disambig",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": [
          {
            "split": "test",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/bbq/data/Disability_status_disambig.jsonl"
          },
          {
            "split": "train",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/fewshot/noEzgaitasun_egoera_4s.jsonl"
          }
        ]
      },
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Context: {{context}}\nQuestion: {{question}}\nChoices:\nA: {{ans0}}\nB: {{ans1}}\nC: {{ans2}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": [
        "A",
        "B",
        "C"
      ],
      "process_results": "def process_results(doc, results):\n    if doc[\"context_condition\"] == \"disambig\":\n        return process_results_disambig(doc, results)\n    return process_results_ambig(doc, results)\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 4,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bias",
          "aggregation": "def aggregate_bias(items):\n    \"\"\"Call the appropriate aggregation function based on the task type. If first item has 3 elements, it's an ambiguous task.\"\"\"\n    if len(items[0]) == 3:\n        return aggregate_bias_ambig(items)\n    return aggregate_bias_disambig(items)\n",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "bbq_Gender_identity_ambig": {
      "task": "bbq_Gender_identity_ambig",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": [
          {
            "split": "test",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/bbq/data/Gender_identity_ambig.jsonl"
          },
          {
            "split": "train",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/fewshot/noGenero_identitate_4s.jsonl"
          }
        ]
      },
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Context: {{context}}\nQuestion: {{question}}\nChoices:\nA: {{ans0}}\nB: {{ans1}}\nC: {{ans2}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": [
        "A",
        "B",
        "C"
      ],
      "process_results": "def process_results(doc, results):\n    if doc[\"context_condition\"] == \"disambig\":\n        return process_results_disambig(doc, results)\n    return process_results_ambig(doc, results)\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 4,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bias",
          "aggregation": "def aggregate_bias(items):\n    \"\"\"Call the appropriate aggregation function based on the task type. If first item has 3 elements, it's an ambiguous task.\"\"\"\n    if len(items[0]) == 3:\n        return aggregate_bias_ambig(items)\n    return aggregate_bias_disambig(items)\n",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "bbq_Gender_identity_disambig": {
      "task": "bbq_Gender_identity_disambig",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": [
          {
            "split": "test",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/bbq/data/Gender_identity_disambig.jsonl"
          },
          {
            "split": "train",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/fewshot/noGenero_identitate_4s.jsonl"
          }
        ]
      },
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Context: {{context}}\nQuestion: {{question}}\nChoices:\nA: {{ans0}}\nB: {{ans1}}\nC: {{ans2}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": [
        "A",
        "B",
        "C"
      ],
      "process_results": "def process_results(doc, results):\n    if doc[\"context_condition\"] == \"disambig\":\n        return process_results_disambig(doc, results)\n    return process_results_ambig(doc, results)\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 4,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bias",
          "aggregation": "def aggregate_bias(items):\n    \"\"\"Call the appropriate aggregation function based on the task type. If first item has 3 elements, it's an ambiguous task.\"\"\"\n    if len(items[0]) == 3:\n        return aggregate_bias_ambig(items)\n    return aggregate_bias_disambig(items)\n",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "bbq_Nationality_ambig": {
      "task": "bbq_Nationality_ambig",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": [
          {
            "split": "test",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/bbq/data/Nationality_ambig.jsonl"
          },
          {
            "split": "train",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/fewshot/noNazionalitate_4s.jsonl"
          }
        ]
      },
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Context: {{context}}\nQuestion: {{question}}\nChoices:\nA: {{ans0}}\nB: {{ans1}}\nC: {{ans2}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": [
        "A",
        "B",
        "C"
      ],
      "process_results": "def process_results(doc, results):\n    if doc[\"context_condition\"] == \"disambig\":\n        return process_results_disambig(doc, results)\n    return process_results_ambig(doc, results)\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 4,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bias",
          "aggregation": "def aggregate_bias(items):\n    \"\"\"Call the appropriate aggregation function based on the task type. If first item has 3 elements, it's an ambiguous task.\"\"\"\n    if len(items[0]) == 3:\n        return aggregate_bias_ambig(items)\n    return aggregate_bias_disambig(items)\n",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "bbq_Nationality_disambig": {
      "task": "bbq_Nationality_disambig",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": [
          {
            "split": "test",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/bbq/data/Nationality_disambig.jsonl"
          },
          {
            "split": "train",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/fewshot/noNazionalitate_4s.jsonl"
          }
        ]
      },
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Context: {{context}}\nQuestion: {{question}}\nChoices:\nA: {{ans0}}\nB: {{ans1}}\nC: {{ans2}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": [
        "A",
        "B",
        "C"
      ],
      "process_results": "def process_results(doc, results):\n    if doc[\"context_condition\"] == \"disambig\":\n        return process_results_disambig(doc, results)\n    return process_results_ambig(doc, results)\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 4,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bias",
          "aggregation": "def aggregate_bias(items):\n    \"\"\"Call the appropriate aggregation function based on the task type. If first item has 3 elements, it's an ambiguous task.\"\"\"\n    if len(items[0]) == 3:\n        return aggregate_bias_ambig(items)\n    return aggregate_bias_disambig(items)\n",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "bbq_Physical_appearance_ambig": {
      "task": "bbq_Physical_appearance_ambig",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": [
          {
            "split": "test",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/bbq/data/Physical_appearance_ambig.jsonl"
          },
          {
            "split": "train",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/fewshot/noItxura_fisikoa_4s.jsonl"
          }
        ]
      },
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Context: {{context}}\nQuestion: {{question}}\nChoices:\nA: {{ans0}}\nB: {{ans1}}\nC: {{ans2}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": [
        "A",
        "B",
        "C"
      ],
      "process_results": "def process_results(doc, results):\n    if doc[\"context_condition\"] == \"disambig\":\n        return process_results_disambig(doc, results)\n    return process_results_ambig(doc, results)\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 4,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bias",
          "aggregation": "def aggregate_bias(items):\n    \"\"\"Call the appropriate aggregation function based on the task type. If first item has 3 elements, it's an ambiguous task.\"\"\"\n    if len(items[0]) == 3:\n        return aggregate_bias_ambig(items)\n    return aggregate_bias_disambig(items)\n",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "bbq_Physical_appearance_disambig": {
      "task": "bbq_Physical_appearance_disambig",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": [
          {
            "split": "test",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/bbq/data/Physical_appearance_disambig.jsonl"
          },
          {
            "split": "train",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/fewshot/noItxura_fisikoa_4s.jsonl"
          }
        ]
      },
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Context: {{context}}\nQuestion: {{question}}\nChoices:\nA: {{ans0}}\nB: {{ans1}}\nC: {{ans2}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": [
        "A",
        "B",
        "C"
      ],
      "process_results": "def process_results(doc, results):\n    if doc[\"context_condition\"] == \"disambig\":\n        return process_results_disambig(doc, results)\n    return process_results_ambig(doc, results)\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 4,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bias",
          "aggregation": "def aggregate_bias(items):\n    \"\"\"Call the appropriate aggregation function based on the task type. If first item has 3 elements, it's an ambiguous task.\"\"\"\n    if len(items[0]) == 3:\n        return aggregate_bias_ambig(items)\n    return aggregate_bias_disambig(items)\n",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "bbq_Race_ethnicity_ambig": {
      "task": "bbq_Race_ethnicity_ambig",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": [
          {
            "split": "test",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/bbq/data/Race_ethnicity_ambig.jsonl"
          },
          {
            "split": "train",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/fewshot/noArraza_etnizitate_4s.jsonl"
          }
        ]
      },
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Context: {{context}}\nQuestion: {{question}}\nChoices:\nA: {{ans0}}\nB: {{ans1}}\nC: {{ans2}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": [
        "A",
        "B",
        "C"
      ],
      "process_results": "def process_results(doc, results):\n    if doc[\"context_condition\"] == \"disambig\":\n        return process_results_disambig(doc, results)\n    return process_results_ambig(doc, results)\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 4,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bias",
          "aggregation": "def aggregate_bias(items):\n    \"\"\"Call the appropriate aggregation function based on the task type. If first item has 3 elements, it's an ambiguous task.\"\"\"\n    if len(items[0]) == 3:\n        return aggregate_bias_ambig(items)\n    return aggregate_bias_disambig(items)\n",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "bbq_Race_ethnicity_disambig": {
      "task": "bbq_Race_ethnicity_disambig",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": [
          {
            "split": "test",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/bbq/data/Race_ethnicity_disambig.jsonl"
          },
          {
            "split": "train",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/fewshot/noArraza_etnizitate_4s.jsonl"
          }
        ]
      },
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Context: {{context}}\nQuestion: {{question}}\nChoices:\nA: {{ans0}}\nB: {{ans1}}\nC: {{ans2}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": [
        "A",
        "B",
        "C"
      ],
      "process_results": "def process_results(doc, results):\n    if doc[\"context_condition\"] == \"disambig\":\n        return process_results_disambig(doc, results)\n    return process_results_ambig(doc, results)\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 4,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bias",
          "aggregation": "def aggregate_bias(items):\n    \"\"\"Call the appropriate aggregation function based on the task type. If first item has 3 elements, it's an ambiguous task.\"\"\"\n    if len(items[0]) == 3:\n        return aggregate_bias_ambig(items)\n    return aggregate_bias_disambig(items)\n",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "bbq_Religion_ambig": {
      "task": "bbq_Religion_ambig",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": [
          {
            "split": "test",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/bbq/data/Religion_ambig.jsonl"
          },
          {
            "split": "train",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/fewshot/noNazionalitate_4s.jsonl"
          }
        ]
      },
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Context: {{context}}\nQuestion: {{question}}\nChoices:\nA: {{ans0}}\nB: {{ans1}}\nC: {{ans2}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": [
        "A",
        "B",
        "C"
      ],
      "process_results": "def process_results(doc, results):\n    if doc[\"context_condition\"] == \"disambig\":\n        return process_results_disambig(doc, results)\n    return process_results_ambig(doc, results)\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 4,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bias",
          "aggregation": "def aggregate_bias(items):\n    \"\"\"Call the appropriate aggregation function based on the task type. If first item has 3 elements, it's an ambiguous task.\"\"\"\n    if len(items[0]) == 3:\n        return aggregate_bias_ambig(items)\n    return aggregate_bias_disambig(items)\n",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "bbq_Religion_disambig": {
      "task": "bbq_Religion_disambig",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": [
          {
            "split": "test",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/bbq/data/Religion_disambig.jsonl"
          },
          {
            "split": "train",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/fewshot/noNazionalitate_4s.jsonl"
          }
        ]
      },
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Context: {{context}}\nQuestion: {{question}}\nChoices:\nA: {{ans0}}\nB: {{ans1}}\nC: {{ans2}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": [
        "A",
        "B",
        "C"
      ],
      "process_results": "def process_results(doc, results):\n    if doc[\"context_condition\"] == \"disambig\":\n        return process_results_disambig(doc, results)\n    return process_results_ambig(doc, results)\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 4,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bias",
          "aggregation": "def aggregate_bias(items):\n    \"\"\"Call the appropriate aggregation function based on the task type. If first item has 3 elements, it's an ambiguous task.\"\"\"\n    if len(items[0]) == 3:\n        return aggregate_bias_ambig(items)\n    return aggregate_bias_disambig(items)\n",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "bbq_SES_ambig": {
      "task": "bbq_SES_ambig",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": [
          {
            "split": "test",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/bbq/data/SES_ambig.jsonl"
          },
          {
            "split": "train",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/fewshot/noMSE_4s.jsonl"
          }
        ]
      },
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Context: {{context}}\nQuestion: {{question}}\nChoices:\nA: {{ans0}}\nB: {{ans1}}\nC: {{ans2}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": [
        "A",
        "B",
        "C"
      ],
      "process_results": "def process_results(doc, results):\n    if doc[\"context_condition\"] == \"disambig\":\n        return process_results_disambig(doc, results)\n    return process_results_ambig(doc, results)\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 4,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bias",
          "aggregation": "def aggregate_bias(items):\n    \"\"\"Call the appropriate aggregation function based on the task type. If first item has 3 elements, it's an ambiguous task.\"\"\"\n    if len(items[0]) == 3:\n        return aggregate_bias_ambig(items)\n    return aggregate_bias_disambig(items)\n",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "bbq_SES_disambig": {
      "task": "bbq_SES_disambig",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": [
          {
            "split": "test",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/bbq/data/SES_disambig.jsonl"
          },
          {
            "split": "train",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/fewshot/noMSE_4s.jsonl"
          }
        ]
      },
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Context: {{context}}\nQuestion: {{question}}\nChoices:\nA: {{ans0}}\nB: {{ans1}}\nC: {{ans2}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": [
        "A",
        "B",
        "C"
      ],
      "process_results": "def process_results(doc, results):\n    if doc[\"context_condition\"] == \"disambig\":\n        return process_results_disambig(doc, results)\n    return process_results_ambig(doc, results)\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 4,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bias",
          "aggregation": "def aggregate_bias(items):\n    \"\"\"Call the appropriate aggregation function based on the task type. If first item has 3 elements, it's an ambiguous task.\"\"\"\n    if len(items[0]) == 3:\n        return aggregate_bias_ambig(items)\n    return aggregate_bias_disambig(items)\n",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "bbq_Sexual_orientation_ambig": {
      "task": "bbq_Sexual_orientation_ambig",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": [
          {
            "split": "test",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/bbq/data/Sexual_orientation_ambig.jsonl"
          },
          {
            "split": "train",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/fewshot/noOrientazio_sexual_4s.jsonl"
          }
        ]
      },
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Context: {{context}}\nQuestion: {{question}}\nChoices:\nA: {{ans0}}\nB: {{ans1}}\nC: {{ans2}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": [
        "A",
        "B",
        "C"
      ],
      "process_results": "def process_results(doc, results):\n    if doc[\"context_condition\"] == \"disambig\":\n        return process_results_disambig(doc, results)\n    return process_results_ambig(doc, results)\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 4,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bias",
          "aggregation": "def aggregate_bias(items):\n    \"\"\"Call the appropriate aggregation function based on the task type. If first item has 3 elements, it's an ambiguous task.\"\"\"\n    if len(items[0]) == 3:\n        return aggregate_bias_ambig(items)\n    return aggregate_bias_disambig(items)\n",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    },
    "bbq_Sexual_orientation_disambig": {
      "task": "bbq_Sexual_orientation_disambig",
      "dataset_path": "json",
      "dataset_kwargs": {
        "data_files": [
          {
            "split": "test",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/bbq/data/Sexual_orientation_disambig.jsonl"
          },
          {
            "split": "train",
            "path": "/gaueko0/users/jetxaniz007/phd/lm_eval/lm-evaluation-harness/lm_eval/tasks/bbq/fewshot/noOrientazio_sexual_4s.jsonl"
          }
        ]
      },
      "test_split": "test",
      "fewshot_split": "train",
      "doc_to_text": "Context: {{context}}\nQuestion: {{question}}\nChoices:\nA: {{ans0}}\nB: {{ans1}}\nC: {{ans2}}\nAnswer:",
      "doc_to_target": "label",
      "unsafe_code": false,
      "doc_to_choice": [
        "A",
        "B",
        "C"
      ],
      "process_results": "def process_results(doc, results):\n    if doc[\"context_condition\"] == \"disambig\":\n        return process_results_disambig(doc, results)\n    return process_results_ambig(doc, results)\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "fewshot_config": {
        "sampler": "first_n"
      },
      "num_fewshot": 4,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "bias",
          "aggregation": "def aggregate_bias(items):\n    \"\"\"Call the appropriate aggregation function based on the task type. If first item has 3 elements, it's an ambiguous task.\"\"\"\n    if len(items[0]) == 3:\n        return aggregate_bias_ambig(items)\n    return aggregate_bias_disambig(items)\n",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 0.0
      }
    }
  },
  "versions": {
    "bbq": 1.0,
    "bbq_Age_ambig": 0.0,
    "bbq_Age_disambig": 0.0,
    "bbq_Disability_status_ambig": 0.0,
    "bbq_Disability_status_disambig": 0.0,
    "bbq_Gender_identity_ambig": 0.0,
    "bbq_Gender_identity_disambig": 0.0,
    "bbq_Nationality_ambig": 0.0,
    "bbq_Nationality_disambig": 0.0,
    "bbq_Physical_appearance_ambig": 0.0,
    "bbq_Physical_appearance_disambig": 0.0,
    "bbq_Race_ethnicity_ambig": 0.0,
    "bbq_Race_ethnicity_disambig": 0.0,
    "bbq_Religion_ambig": 0.0,
    "bbq_Religion_disambig": 0.0,
    "bbq_SES_ambig": 0.0,
    "bbq_SES_disambig": 0.0,
    "bbq_Sexual_orientation_ambig": 0.0,
    "bbq_Sexual_orientation_disambig": 0.0
  },
  "n-shot": {
    "bbq_Age_ambig": 4,
    "bbq_Age_disambig": 4,
    "bbq_Disability_status_ambig": 4,
    "bbq_Disability_status_disambig": 4,
    "bbq_Gender_identity_ambig": 4,
    "bbq_Gender_identity_disambig": 4,
    "bbq_Nationality_ambig": 4,
    "bbq_Nationality_disambig": 4,
    "bbq_Physical_appearance_ambig": 4,
    "bbq_Physical_appearance_disambig": 4,
    "bbq_Race_ethnicity_ambig": 4,
    "bbq_Race_ethnicity_disambig": 4,
    "bbq_Religion_ambig": 4,
    "bbq_Religion_disambig": 4,
    "bbq_SES_ambig": 4,
    "bbq_SES_disambig": 4,
    "bbq_Sexual_orientation_ambig": 4,
    "bbq_Sexual_orientation_disambig": 4
  },
  "higher_is_better": {
    "bbq": {
      "acc": true,
      "bias": true
    },
    "bbq_Age_ambig": {
      "acc": true,
      "bias": true
    },
    "bbq_Age_disambig": {
      "acc": true,
      "bias": true
    },
    "bbq_Disability_status_ambig": {
      "acc": true,
      "bias": true
    },
    "bbq_Disability_status_disambig": {
      "acc": true,
      "bias": true
    },
    "bbq_Gender_identity_ambig": {
      "acc": true,
      "bias": true
    },
    "bbq_Gender_identity_disambig": {
      "acc": true,
      "bias": true
    },
    "bbq_Nationality_ambig": {
      "acc": true,
      "bias": true
    },
    "bbq_Nationality_disambig": {
      "acc": true,
      "bias": true
    },
    "bbq_Physical_appearance_ambig": {
      "acc": true,
      "bias": true
    },
    "bbq_Physical_appearance_disambig": {
      "acc": true,
      "bias": true
    },
    "bbq_Race_ethnicity_ambig": {
      "acc": true,
      "bias": true
    },
    "bbq_Race_ethnicity_disambig": {
      "acc": true,
      "bias": true
    },
    "bbq_Religion_ambig": {
      "acc": true,
      "bias": true
    },
    "bbq_Religion_disambig": {
      "acc": true,
      "bias": true
    },
    "bbq_SES_ambig": {
      "acc": true,
      "bias": true
    },
    "bbq_SES_disambig": {
      "acc": true,
      "bias": true
    },
    "bbq_Sexual_orientation_ambig": {
      "acc": true,
      "bias": true
    },
    "bbq_Sexual_orientation_disambig": {
      "acc": true,
      "bias": true
    }
  },
  "n-samples": {
    "bbq_Age_ambig": {
      "original": 1840,
      "effective": 1840
    },
    "bbq_Age_disambig": {
      "original": 1840,
      "effective": 1840
    },
    "bbq_Disability_status_ambig": {
      "original": 778,
      "effective": 778
    },
    "bbq_Disability_status_disambig": {
      "original": 778,
      "effective": 778
    },
    "bbq_Gender_identity_ambig": {
      "original": 2836,
      "effective": 2836
    },
    "bbq_Gender_identity_disambig": {
      "original": 2836,
      "effective": 2836
    },
    "bbq_Nationality_ambig": {
      "original": 1540,
      "effective": 1540
    },
    "bbq_Nationality_disambig": {
      "original": 1540,
      "effective": 1540
    },
    "bbq_Physical_appearance_ambig": {
      "original": 788,
      "effective": 788
    },
    "bbq_Physical_appearance_disambig": {
      "original": 788,
      "effective": 788
    },
    "bbq_Race_ethnicity_ambig": {
      "original": 3440,
      "effective": 3440
    },
    "bbq_Race_ethnicity_disambig": {
      "original": 3440,
      "effective": 3440
    },
    "bbq_Religion_ambig": {
      "original": 600,
      "effective": 600
    },
    "bbq_Religion_disambig": {
      "original": 600,
      "effective": 600
    },
    "bbq_SES_ambig": {
      "original": 3432,
      "effective": 3432
    },
    "bbq_SES_disambig": {
      "original": 3432,
      "effective": 3432
    },
    "bbq_Sexual_orientation_ambig": {
      "original": 432,
      "effective": 432
    },
    "bbq_Sexual_orientation_disambig": {
      "original": 432,
      "effective": 432
    }
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=HiTZ/Latxa-Llama-3.1-8B-Instruct,attn_implementation=flash_attention_2,dtype=bfloat16,revision=exp_0_011",
    "model_num_parameters": 8030261248,
    "model_dtype": "torch.bfloat16",
    "model_revision": "main",
    "model_sha": "",
    "batch_size": "1",
    "batch_sizes": [],
    "device": "cuda",
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": null,
  "date": 1744387210.2984238,
  "pretty_env_info": "PyTorch version: 2.6.0+cu124\nIs debug build: False\nCUDA used to build PyTorch: 12.4\nROCM used to build PyTorch: N/A\n\nOS: Rocky Linux 8.4 (Green Obsidian) (x86_64)\nGCC version: (GCC) 8.5.0 20210514 (Red Hat 8.5.0-4)\nClang version: Could not collect\nCMake version: version 3.25.2\nLibc version: glibc-2.28\n\nPython version: 3.9.7 (default, Oct  1 2021, 12:52:57)  [GCC 8.4.1 20200928 (Red Hat 8.4.1-1)] (64-bit runtime)\nPython platform: Linux-4.18.0-305.19.1.el8_4.x86_64-x86_64-with-glibc2.28\nIs CUDA available: True\nCUDA runtime version: 12.1.105\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: \nGPU 0: NVIDIA A100-SXM4-80GB\nGPU 1: NVIDIA A100-SXM4-80GB\nGPU 2: NVIDIA A100-SXM4-80GB\nGPU 3: NVIDIA A100-SXM4-80GB\n\nNvidia driver version: 535.104.12\ncuDNN version: Probably one of the following:\n/usr/local/cuda-11.3/targets/x86_64-linux/lib/libcudnn.so.8.2.1\n/usr/local/cuda-11.3/targets/x86_64-linux/lib/libcudnn_adv_infer.so.8.2.1\n/usr/local/cuda-11.3/targets/x86_64-linux/lib/libcudnn_adv_train.so.8.2.1\n/usr/local/cuda-11.3/targets/x86_64-linux/lib/libcudnn_cnn_infer.so.8.2.1\n/usr/local/cuda-11.3/targets/x86_64-linux/lib/libcudnn_cnn_train.so.8.2.1\n/usr/local/cuda-11.3/targets/x86_64-linux/lib/libcudnn_ops_infer.so.8.2.1\n/usr/local/cuda-11.3/targets/x86_64-linux/lib/libcudnn_ops_train.so.8.2.1\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:        x86_64\nCPU op-mode(s):      32-bit, 64-bit\nByte Order:          Little Endian\nCPU(s):              128\nOn-line CPU(s) list: 0-127\nThread(s) per core:  2\nCore(s) per socket:  32\nSocket(s):           2\nNUMA node(s):        2\nVendor ID:           AuthenticAMD\nCPU family:          25\nModel:               1\nModel name:          AMD EPYC 7513 32-Core Processor\nStepping:            1\nCPU MHz:             3551.307\nCPU max MHz:         2600.0000\nCPU min MHz:         1500.0000\nBogoMIPS:            5190.38\nVirtualization:      AMD-V\nL1d cache:           32K\nL1i cache:           32K\nL2 cache:            512K\nL3 cache:            32768K\nNUMA node0 CPU(s):   0-31,64-95\nNUMA node1 CPU(s):   32-63,96-127\nFlags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 pcid sse4_1 sse4_2 movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 invpcid_single hw_pstate sme ssbd mba sev ibrs ibpb stibp vmmcall sev_es fsgsbase bmi1 avx2 smep bmi2 erms invpcid cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr wbnoinvd amd_ppin arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold v_vmsave_vmload vgif umip pku ospke vaes vpclmulqdq rdpid overflow_recov succor smca fsrm\n\nVersions of relevant libraries:\n[pip3] flake8==6.0.0\n[pip3] mypy-extensions==1.0.0\n[pip3] numpy==1.26.4\n[pip3] nvidia-cublas-cu11==11.10.3.66\n[pip3] nvidia-cublas-cu12==12.4.5.8\n[pip3] nvidia-cuda-cupti-cu12==12.4.127\n[pip3] nvidia-cuda-nvrtc-cu11==11.7.99\n[pip3] nvidia-cuda-nvrtc-cu12==12.4.127\n[pip3] nvidia-cuda-runtime-cu11==11.7.99\n[pip3] nvidia-cuda-runtime-cu12==12.4.127\n[pip3] nvidia-cudnn-cu11==8.5.0.96\n[pip3] nvidia-cudnn-cu12==9.1.0.70\n[pip3] nvidia-cufft-cu12==11.2.1.3\n[pip3] nvidia-curand-cu12==10.3.5.147\n[pip3] nvidia-cusolver-cu12==11.6.1.9\n[pip3] nvidia-cusparse-cu12==12.3.1.170\n[pip3] nvidia-cusparselt-cu12==0.6.2\n[pip3] nvidia-nccl-cu12==2.21.5\n[pip3] nvidia-nvjitlink-cu12==12.4.127\n[pip3] nvidia-nvtx-cu12==12.4.127\n[pip3] torch==2.6.0\n[pip3] torchaudio==2.6.0\n[pip3] torchvision==0.21.0\n[pip3] triton==3.2.0\n[conda] Could not collect",
  "transformers_version": "4.51.1",
  "upper_git_hash": null,
  "tokenizer_pad_token": [
    "<|end_of_text|>",
    "128001"
  ],
  "tokenizer_eos_token": [
    "<|eot_id|>",
    "128009"
  ],
  "tokenizer_bos_token": [
    "<|begin_of_text|>",
    "128000"
  ],
  "eot_token_id": 128009,
  "max_length": 131072,
  "task_hashes": {
    "bbq_Age_ambig": "abfeb632f73707d92fcfd3d3d6c95a45c6b23fdb3a658eacc1d065d40b9a372e",
    "bbq_Age_disambig": "ac03fd91586b6497f25cf8fc4b7eb1a6b52dbe83a36212a71d4baf9a2599152b",
    "bbq_Disability_status_ambig": "c3c0468012d57c77ddef13a35e63d0056be062389436a4d9afa85b3002133325",
    "bbq_Disability_status_disambig": "b7b77e31f255ffe32fe7d26cdaf2415fc17c0e6b14f116f11d6a27a9fdd1d6c1",
    "bbq_Gender_identity_ambig": "63a335a026c920790a30bd0e9c69ba582404e49e6f225ca1821dd07f862b7bac",
    "bbq_Gender_identity_disambig": "8b9651ea0124de8171dd3b6f0fa8c4e780253d25cb7aa6f2f26181b91771fbe0",
    "bbq_Nationality_ambig": "13b888d8dffd7ea0e7f15ea079e866d5dc94a971b738700097674a47f74640ed",
    "bbq_Nationality_disambig": "ef9b88c29c5d05bb1c77a00c1814df995607030777dde8e1a89fed6982ef4204",
    "bbq_Physical_appearance_ambig": "e6c61306e552899144d592a65bf07f1ebf117704951abe7eac7e982f37eb1445",
    "bbq_Physical_appearance_disambig": "a51f188554bfc1ebc8dfed9cd725dd09a19eb4ee6215ef68af75da4aa42a8069",
    "bbq_Race_ethnicity_ambig": "01838941ff051d3a63c62d28dedb0cbea63460dcb874e6b4fae8e193529935f3",
    "bbq_Race_ethnicity_disambig": "e66358753001026d62066ae0484d96fce022c623e3d375f887302036904d4e65",
    "bbq_Religion_ambig": "7858638582c54ad8cc90b8ec9513fc2d634233dfe020e1e217f4d69dca96b220",
    "bbq_Religion_disambig": "547637d36b1d31144170da7146b4fa092ffe9c0c32d097634cefdfca6a755976",
    "bbq_SES_ambig": "8345045efebf0ca67d856df671a487bc179a8728812432fcf3fda96997513d2c",
    "bbq_SES_disambig": "b6d969a7a4d99f769f008d67f227eed1b65221d4a5c991eebbbd47431a7032c3",
    "bbq_Sexual_orientation_ambig": "d7541cdaa07d64322cb52a0892fa52d81025e243fd7de6761298cdac2e31e0bd",
    "bbq_Sexual_orientation_disambig": "00687a492e42af0ac3687a7bc3d94034c89155a69d49fee18b85da73bb6c8d2a"
  },
  "model_source": "hf",
  "model_name": "HiTZ/Latxa-Llama-3.1-8B-Instruct",
  "model_name_sanitized": "HiTZ__Latxa-Llama-3.1-8B-Instruct",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": true,
  "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n{%- if builtin_tools is defined or tools is not none %}\n    {{- \"Environment: ipython\\n\" }}\n{%- endif %}\n{%- if builtin_tools is defined %}\n    {{- \"Tools: \" + builtin_tools | reject('equalto', 'code_interpreter') | join(\", \") + \"\\n\\n\"}}\n{%- endif %}\n{{- \"Cutting Knowledge Date: December 2023\\n\" }}\n{{- \"Today Date: \" + date_string + \"\\n\\n\" }}\n{%- if tools is not none and not tools_in_user_message %}\n    {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_user_message = messages[0]['content']|trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|start_header_id|>user<|end_header_id|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot_id|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {%- if builtin_tools is defined and tool_call.name in builtin_tools %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- \"<|python_tag|>\" + tool_call.name + \".call(\" }}\n            {%- for arg_name, arg_val in tool_call.arguments | items %}\n                {{- arg_name + '=\"' + arg_val + '\"' }}\n                {%- if not loop.last %}\n                    {{- \", \" }}\n                {%- endif %}\n                {%- endfor %}\n            {{- \")\" }}\n        {%- else  %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n            {{- '\"parameters\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- \"}\" }}\n        {%- endif %}\n        {%- if builtin_tools is defined %}\n            {#- This means we're in ipython mode #}\n            {{- \"<|eom_id|>\" }}\n        {%- else %}\n            {{- \"<|eot_id|>\" }}\n        {%- endif %}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}\n",
  "chat_template_sha": "e10ca381b1ccc5cf9db52e371f3b6651576caee0a630b452e2816b2d404d4b65",
  "start_time": 17624273.64343137,
  "end_time": 17626265.73718279,
  "total_evaluation_time_seconds": "1992.0937514193356"
}